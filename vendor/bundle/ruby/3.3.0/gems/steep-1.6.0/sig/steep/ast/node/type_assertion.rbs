module Steep
  module AST
    module Node
      class TypeAssertion
        attr_reader location: RBS::Location[untyped, untyped]

        def source: () -> String

        def line: () -> Integer

        def initialize: (RBS::Location[untyped, untyped]) -> void

        def type: (RBS::Resolver::context, Subtyping::Check, Array[Symbol] type_vars) -> (Types::t | RBS::ParsingError | Array[Diagnostic::Signature::Base] | nil)

        def type?: (RBS::Resolver::context, Subtyping::Check, Array[Symbol] type_vars) -> Types::t?

        @type_str: String?
        def type_str: () -> String

        def type_location: () -> RBS::Location[untyped, untyped]

        # Returns true if given comment body has a valid type syntax
        #
        # This method is used to reject RDoc directives beforehand.
        #
        def type_syntax?: () -> bool

        def self.parse: (RBS::Location[untyped, untyped]) -> TypeAssertion?
      end
    end
  end
end
