module Steep
  module AST
    module Types
      class Literal
        attr_reader location: untyped

        type value = Integer | String | Symbol | TrueClass | FalseClass

        attr_reader value: value

        def initialize: (value: value, ?location: untyped?) -> void

        def ==: (untyped other) -> bool

        def hash: () -> Integer

        alias eql? ==

        def subst: (Interface::Substitution s) -> Literal

        def to_s: () -> String

        include Helper::NoFreeVariables

        include Helper::NoChild

        def level: () -> Array[Integer]

        def with_location: (untyped new_location) -> Literal

        def back_type: () -> AST::Types::Name::Instance
      end
    end
  end
end
